name: Android Release APK (ShiftOS)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter pub get
        run: flutter pub get

      # Build a RELEASE APK (unsigned) with your Supabase defines
      - name: Flutter build release APK (unsigned)
        run: >
          flutter build apk --release
          --dart-define=SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          --dart-define=SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}

      # Create a temporary debug keystore on the runner to sign the APK
      - name: Generate debug keystore (runner only)
        run: |
          mkdir -p ~/.android
          keytool -genkeypair -v \
            -storetype JKS \
            -keystore ~/.android/debug.keystore \
            -storepass android \
            -keypass android \
            -alias AndroidDebugKey \
            -dname "CN=Android,O=Android,C=US" \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000

      # Sign the APK using apksigner from the installed Android build-tools
      - name: Sign APK with apksigner
        shell: bash
        run: |
          set -e
          APK="build/app/outputs/flutter-apk/app-release.apk"
          # find latest build-tools apksigner
          APKSIGNER=$(find "${ANDROID_SDK_ROOT}/build-tools" -type f -name apksigner | sort -V | tail -n1)
          if [ -z "$APKSIGNER" ]; then
            echo "apksigner not found in \$ANDROID_SDK_ROOT/build-tools"; exit 1
          fi
          "$APKSIGNER" sign \
            --ks "$HOME/.android/debug.keystore" \
            --ks-pass pass:android \
            --key-pass pass:android \
            --ks-key-alias AndroidDebugKey \
            "$APK"
          "$APKSIGNER" verify --print-certs "$APK"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: shiftos-mvp-apk
          path: build/app/outputs/flutter-apk/app-release.apk
